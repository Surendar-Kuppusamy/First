
Project Basic Setup
-------------------
*) Install typescript[npm i -g typescript]
*) Run command "tsc --init" and fill the details    --  It will create tsconfig file
*) Run command "npm init" to setup project description
*) Install "ts-node" -- ts-node is a TypeScript execution engine and REPL for Node.js.
*) To run the server "nodemon index.ts"
*) Install Eslint and prettier.
*) Eslint -- It is used to validate code standard and find some common errors.
*) Prettier -- It is used to align the code properly
*) Above package installed details,
    -   eslint: ESLint core package.
    -   @typescript-eslint/parser: Parser for TypeScript files.
    -   @typescript-eslint/eslint-plugin: ESLint rules for TypeScript.
    -   prettier: Prettier package.
    -   eslint-config-prettier: Disables ESLint rules that conflict with Prettier.
    -   eslint-plugin-prettier: Runs Prettier as an ESLint rule.
*) Then Run command "npx eslint --init", it is used to create ESlint config.
*) It ask so many question and answer related to questions. Answer is mentioned below,
    -   How would you like to use ESLint? · style
    -   √ What type of modules does your project use? · esm
    -   √ Which framework does your project use? · none
    -   √ Does your project use TypeScript? · No / Yes
    -   √ Where does your code run? · browser
    -   ? How would you like to define a style for your project? ...
    -   > Use a popular style guide
    -   √ How would you like to define a style for your project? · prompt
    -   √ What format do you want your config file to be in? · JSON
    -   √ What style of indentation do you use? · tab
    -   √ What quotes do you use for strings? · double
    -   √ What line endings do you use? · windows
    -   √ Do you require semicolons? · No / Yes
    The config that you've selected requires the following dependencies:

    -   @typescript-eslint/eslint-plugin@latest @typescript-eslint/parser@latest
    -   √ Would you like to install them now? · No / Yes
    -   √ Which package manager do you want to use? · npm

*) Reference for above question,
    -   How would you like to use ESLint?:
    -   Select "To check syntax, find problems, and enforce code style".
    -   What type of modules does your project use?:
    -   Choose the appropriate module system for your project (e.g., CommonJS, ES modules).
    -   Which framework does your project use?:
    -   If you're using a framework like Express.js, you can select it here.
    -   Does your project use TypeScript?:
    -   Select "Yes" if your project uses TypeScript.
    -   Where does your code run?:
    -   Specify where your code runs (e.g., Browser, Node).
    -   How would you like to define a style for your project?:
    -   Choose your preferred style guide or select "Answer questions about your style".
    -   Which style guide do you want to follow?:
    -   You can choose from popular style guides like Airbnb, Standard, or Google, or select "Use a popular style guide".
    -   What format do you want your config file to be in?:
    -   Choose the format for your ESLint configuration file (e.g., JavaScript, YAML, JSON).
    -   Would you like to install them now with npm?:
    -   Select "Yes" if you want ESLint to install the necessary packages based on your configuration.

*) Update "package.json" file with below commands on "scripts", it will check the lint errors and automatically fixs that errors
    -   "lint": "eslint . --ext .ts",
    -   "lint:fix": "eslint . --ext .ts --fix",

*) Update VS Code Editor setting to format the code while saving. For this follow the below steps,
    -   Go to, File -> Preferences -> Settings
    -   Search with the text "format on save"
    -   Check the option, "Editor: Format On Save"

*) Then configure the "Prettier Formatter" to VS Code Editor. Follow below steps,
    -   Go to the any one of the .ts or .js file.
    -   Then press, "Alt + Shift + F"
    -   Click "Configure" and choose "Prettier Formatter"

*) Then create prettier formatter config file, run the below commnad,
    -   Run the command, "touch .prettierrc"
    -   Above command create a new file ".prettierrc"

*) Update the required setting on that file, options are mentioned below,
    {
        "tabWidth": 4,
        "useTabs": false,
        "semi": true,
        "singleQuote": true
    }

*) For apply prettier format to all types of files.[Ex: .js, .json] Follow below steps,
    -   In VS Code editor press, "Ctrl + Shift + P"
    -   On search bar, search the text "Workspace Settings (JSON)"
    -   Then select the option, "Preferences: Open Workspace Settings (JSON)"
    -   It will automatically create one setting files on folder ".vscode"
    -   Paste the below json options on that file,
    {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    }

*) Configure the "Prettier" on to the ESLint, reference configuration is in below,
    {
        "extends": [
            "eslint:recommended",
            "plugin:@typescript-eslint/recommended",
            "prettier"
        ],
        "parser": "@typescript-eslint/parser",
        "plugins": ["@typescript-eslint", "prettier"],
        "rules": {
            "prettier/prettier": [
                "error",
                {
                    "endOfLine": "auto"
                }
            ]
        }
    }

*) Check file ".eslintrc.json", that the "prettier" is configured like above. It will check the prettier format error too.

*) Next, setup git commit is not success when ESlint validation is failed, for this install two packages,
    -   npm i lint-staged husky --save-dev

*) Then update the "package.json" file with below commands,
    -   Note: Don't forgot to change the file extension based on project,
    "lint-staged": {
        "*.ts": [
            "eslint",
            "git add"
        ]
    },
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged"
        }
    }



Packages:
---------
npm i -g nodemon
npm i -g typescript
npm install -g ts-node
npm i express @types/express
npm i cors          --  To handle CORS issue(Which means if front end and backend end URL is have different domain name or port number)
npm i express-session   --  It is used to manage session and create/read cookies from request(req) varibale.
npm i eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier --save-dev
npm i lint-staged husky --save-dev


Reference Links:
----------------
*) Below link is used to, "Apply Prettier Formater to all types of file.[Ex: .json, .js]"
Note: Just take the json configuration, don't follow the steps, because it will apply for all project.
https://www.humankode.com/javascript/set-up-prettier-and-vs-code-to-format-your-code/#:~:text=Open%20the%20user%20settings%20JSON,Open%20User%20Settings%20(JSON)%20.&text=Then%20add%20the%20following%20lines,json%20file%20and%20save%20it.

*) Below link, is used to fix the ESlint rule prettier error.
https://stackoverflow.com/questions/53516594/why-do-i-keep-getting-eslint-delete-cr-prettier-prettier 

Issues:
-------
"tsc" command is not working
-----------------------------
*) Add "%AppData%\npm" this on system environment variable "Path"
*) And also check your working on "CMD" or "powershell"
*) Finally try command "tsc -v"